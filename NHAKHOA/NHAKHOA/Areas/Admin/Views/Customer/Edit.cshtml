@model NHAKHOA.Models.Customer

@{
    ViewBag.Title = "Edit";
    
    List<NHAKHOA.Models.Province> lprovince = (List<NHAKHOA.Models.Province>)TempData["province"];
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 class="text-center">THÔNG TIN BỆNH NHÂN</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*@Html.HiddenFor(model => model.ID)*@
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.Sex,
              new List<SelectListItem>
                {
                  new SelectListItem { Value = "" , Text = "--Giới tính--" },
                new SelectListItem { Value = "0" , Text = "Không xác định" },
                new SelectListItem { Value = "1" , Text = "Nam" },
                new SelectListItem { Value = "2" , Text = "Nữ" }
                },
                new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.Birthday, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.Province, new SelectList(lprovince, "Name", "Name"), "--Thành phố--",
           new { onchange = "GetCity()", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.District, new SelectList(Enumerable.Empty<SelectListItem>(), "Name", "Name"), Model.District,
           new { onchange = "GetDistrict()", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Ward, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.Ward, new SelectList(Enumerable.Empty<SelectListItem>(), "Name", "Name"), Model.Ward,
           new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Ward, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.SumWarranti, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-20">
            @Html.EditorFor(model => model.SumWarranti, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SumWarranti, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group ">
        @Html.LabelFor(model => model.Createby, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-20">
            @Html.EditorFor(model => model.Createby, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Createby, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Createdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-20">
            @Html.EditorFor(model => model.Createdate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Createdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Editdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-20">
            @Html.EditorFor(model => model.Editdate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Editdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="text-center">
            <button type="submit" class="btn btn-success"><i class="glyphicon glyphicon-ok"></i> Lưu thông tin</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script>
        function GetCity() {
            var name = $("#Province").val();
            $("#District").html("");
            $.ajax
                ({
                    url: '/Customer/GetCity',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        name: name
                    }),
                    success: function (result) {
                        $.each($.parseJSON(result), function (i, city) {
                            $("#District").append
                                ($('<option></option>').val(city).html(city))
                        })
                    },
                    error: function () {
                        alert("Hệ thống xảy ra lỗi.")
                    },
                });
        }
        function GetDistrict() {
            var name = $("#District").val();
            $("#Ward").html("");
            $.ajax
                ({
                    url: '/Customer/GetDistrict',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        name: name
                    }),
                    success: function (result) {
                        $.each($.parseJSON(result), function (i, city) {
                            $("#Ward").append
                                ($('<option></option>').val(city).html(city))
                        })
                    },
                    error: function () {
                        alert("Hệ thống xảy ra lỗi.")
                    },
                });
        }
    </script>
}